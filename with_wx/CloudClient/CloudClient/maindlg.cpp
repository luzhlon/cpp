/////////////////////////////////////////////////////////////////////////////
// Name:        maindlg.cpp
// Purpose:     
// Author:      CodeSoul
// Modified by: 
// Created:     28/05/2015 17:32:20
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 28/05/2015 17:32:20

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"
#include "connectdlg.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "maindlg.h"

////@begin XPM images
////@end XPM images


/*
 * MainDlg type definition
 */

IMPLEMENT_DYNAMIC_CLASS( MainDlg, wxDialog )


/*
 * MainDlg event table definition
 */

BEGIN_EVENT_TABLE( MainDlg, wxDialog )

////@begin MainDlg event table entries
    EVT_BUTTON( ID_BTN_CONNECT, MainDlg::OnBtnConnectClick )
////@end MainDlg event table entries

END_EVENT_TABLE()


/*
 * MainDlg constructors
 */

MainDlg::MainDlg()
{
    Init();
}

MainDlg::MainDlg( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, caption, pos, size, style);
}


/*
 * MainDlg creator
 */

bool MainDlg::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin MainDlg creation
    SetExtraStyle(wxWS_EX_VALIDATE_RECURSIVELY|wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end MainDlg creation
    return true;
}


/*
 * MainDlg destructor
 */

MainDlg::~MainDlg()
{
////@begin MainDlg destruction
////@end MainDlg destruction
}


/*
 * Member initialisation
 */

void MainDlg::Init()
{
////@begin MainDlg member initialisation
    m_txLog = NULL;
    m_txIP = NULL;
    m_txPort = NULL;
    m_btnConnect = NULL;
////@end MainDlg member initialisation
}


/*
 * Control creation for MainDlg
 */

void MainDlg::CreateControls()
{    
////@begin MainDlg content construction
    // Generated by DialogBlocks, 29/05/2015 17:20:40 (unregistered)

    MainDlg* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    m_txLog = new wxTextCtrl( itemDialog1, ID_TEXT_LOG, wxEmptyString, wxDefaultPosition, wxSize(520, 380), wxTE_MULTILINE );
    itemBoxSizer2->Add(m_txLog, 0, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer4 = new wxBoxSizer(wxHORIZONTAL);
    itemBoxSizer2->Add(itemBoxSizer4, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxGridSizer* itemGridSizer5 = new wxGridSizer(0, 2, 0, 0);
    itemBoxSizer4->Add(itemGridSizer5, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText6 = new wxStaticText( itemDialog1, wxID_STATIC, _("Server IP:"), wxDefaultPosition, wxDefaultSize, 0 );
    itemGridSizer5->Add(itemStaticText6, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_txIP = new wxTextCtrl( itemDialog1, ID_TEXT_IP, _("127.0.0.1"), wxDefaultPosition, wxDefaultSize, 0 );
    itemGridSizer5->Add(m_txIP, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxStaticText* itemStaticText8 = new wxStaticText( itemDialog1, wxID_STATIC, _("Server Port:"), wxDefaultPosition, wxDefaultSize, 0 );
    itemGridSizer5->Add(itemStaticText8, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    m_txPort = new wxTextCtrl( itemDialog1, ID_TEXT_PORT, _("4320"), wxDefaultPosition, wxDefaultSize, 0 );
    itemGridSizer5->Add(m_txPort, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    itemBoxSizer4->Add(250, 5, 0, wxGROW|wxALL, 5);

    m_btnConnect = new wxButton( itemDialog1, ID_BTN_CONNECT, _("Connect"), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer4->Add(m_btnConnect, 0, wxALIGN_TOP|wxALL, 5);

////@end MainDlg content construction

	wxLog::SetLogLevel(wxLOG_Message);//设置Log级别
	wxLog::SetActiveTarget(new wxLogTextCtrl(m_txLog));//设置Log目标
}


/*
 * Should we show tooltips?
 */

bool MainDlg::ShowToolTips()
{
    return true;
}

/*
 * Get bitmap resources
 */

wxBitmap MainDlg::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin MainDlg bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end MainDlg bitmap retrieval
}

/*
 * Get icon resources
 */

wxIcon MainDlg::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin MainDlg icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end MainDlg icon retrieval
}

#if defined(__WXMSW__)

/*
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BTN_CONNECT
 */

void MainDlg::Log(const char *log)
{
	m_txLog->AppendText(log);
}
void MainDlg::LogLine(const char *log)
{
	m_txLog->AppendText(log);
	m_txLog->AppendText("\n");
}

void MainDlg::OnBtnConnectClick( wxCommandEvent& event )
{
	long port = 0;
	if (!m_txPort->GetValue().ToLong(&port))
	{
		wxMessageBox("Invalid port."); return;
	}
	ConnectDlg *dlg = new ConnectDlg(m_txIP->GetValue(), port);
	dlg->Show();
}

#endif

